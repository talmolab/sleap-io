# Docs build
name: Docs

on:
  release:
    types:
      - published
  push:
    # branches:
    #   - main
    paths:
      - "sleap_io/**"
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/docs.yml"

jobs:
  docs:
    name: Docs
    runs-on: "ubuntu-latest"
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Setup UV
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Print environment info
        run: |
          which python
          uv pip list
          uv pip freeze

      - name: Setup Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build and upload docs (release)
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uv run mike deploy --update-aliases --allow-empty --push "${{ github.event.release.tag_name }}" latest

      - name: Build and upload docs (dev)
        if: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uv run mike deploy --update-aliases --allow-empty --push dev

      - name: Reorder versions.json on gh-pages
        if: ${{ github.event_name == 'release' || github.event_name == 'push' }}
        run: |
          # Copy the reordering script to temp location before switching branches
          cp scripts/reorder_versions.py /tmp/reorder_versions.py
          
          # Fetch and checkout gh-pages branch
          git fetch origin gh-pages
          git checkout gh-pages
          
          # Run the reordering script
          uv run python /tmp/reorder_versions.py versions.json
          
          # Commit and push if there are changes
          if git diff --quiet; then
            echo "No changes to versions.json"
          else
            git add versions.json
            git commit -m "Reorder versions.json for proper version dropdown sorting"
            git push origin gh-pages
          fi
          
          # Switch back to the original branch
          git checkout -
          
          # Clean up temp file
          rm /tmp/reorder_versions.py